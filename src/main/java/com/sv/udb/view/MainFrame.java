/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sv.udb.view;

import com.sv.udb.controller.PlayerController;
import com.sv.udb.controller.TeamController;
import com.sv.udb.model.Player;
import com.sv.udb.model.Team;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Estudiante
 */
public class MainFrame extends javax.swing.JFrame {

    int teamId; //Id del equipo seleccionado actualmente
    int playerId;
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        refreshTeams();
        refreshPlayers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTeamName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtTeamDesc = new javax.swing.JTextArea();
        btnAddTeam = new javax.swing.JButton();
        btnModTeam = new javax.swing.JButton();
        btnDelTeam = new javax.swing.JButton();
        btnClearTeam = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTeam = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtPlayerName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAddPlayer = new javax.swing.JButton();
        txtAge = new javax.swing.JTextField();
        txtHeight = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmbTeam = new javax.swing.JComboBox<>();
        btnModPlayer = new javax.swing.JButton();
        btnDelPlayer = new javax.swing.JButton();
        btnClearPlayer = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPlayer = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ingreso de datos");

        txtTeamName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeamNameActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Descripción:");

        txtTeamDesc.setColumns(20);
        txtTeamDesc.setLineWrap(true);
        txtTeamDesc.setRows(5);
        jScrollPane2.setViewportView(txtTeamDesc);

        btnAddTeam.setText("Agregar");
        btnAddTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTeamActionPerformed(evt);
            }
        });

        btnModTeam.setText("Modificar");
        btnModTeam.setEnabled(false);
        btnModTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModTeamActionPerformed(evt);
            }
        });

        btnDelTeam.setText("Eliminar");
        btnDelTeam.setEnabled(false);
        btnDelTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelTeamActionPerformed(evt);
            }
        });

        btnClearTeam.setText("Limpiar");
        btnClearTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTeamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jScrollPane2)
                        .addComponent(txtTeamName))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddTeam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClearTeam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnModTeam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelTeam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddTeam)
                    .addComponent(btnModTeam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelTeam)
                    .addComponent(btnClearTeam))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        tblTeam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Descripción"
            }
        ));
        tblTeam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTeamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTeam);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Equipos", jPanel1);

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ingreso de datos");

        txtPlayerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlayerNameActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nombre:");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Edad:");

        btnAddPlayer.setText("Agregar");
        btnAddPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPlayerActionPerformed(evt);
            }
        });

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        txtHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeightActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Altura:");

        txtWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWeightActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Peso:");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Equipo:");

        cmbTeam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vacío" }));

        btnModPlayer.setText("Modificar");
        btnModPlayer.setEnabled(false);
        btnModPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModPlayerActionPerformed(evt);
            }
        });

        btnDelPlayer.setText("Eliminar");
        btnDelPlayer.setEnabled(false);
        btnDelPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelPlayerActionPerformed(evt);
            }
        });

        btnClearPlayer.setText("Limpiar");
        btnClearPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearPlayerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbTeam, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPlayerName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHeight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(txtWeight))))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClearPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnModPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(23, 23, 23)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModPlayer)
                    .addComponent(btnAddPlayer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelPlayer)
                    .addComponent(btnClearPlayer))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        tblPlayer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Edad", "Altura", "Peso", "Equipo"
            }
        ));
        tblPlayer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPlayerMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPlayer);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Jugadores", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTeamNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeamNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeamNameActionPerformed

    private void txtPlayerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlayerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlayerNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHeightActionPerformed

    private void txtWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeightActionPerformed

    private void refreshTeams () {
        try {
            
            //Limpiando campos de tabla
            teamId = 0;
            txtTeamName.setText("");
            txtTeamDesc.setText("");
            //Obteniendo y limpiando modelo de tabla
            DefaultTableModel model = (DefaultTableModel) tblTeam.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            
            
            //Limpiando combobox
            DefaultComboBoxModel cmModel = (DefaultComboBoxModel) cmbTeam.getModel();
            cmModel.removeAllElements();
            
            
            //Llenando modelos
            for (Team team : new TeamController().getAll()) {
                model.addRow(new Object[]{team, team.getDescription()});
                cmModel.addElement(team);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al llenar tabla de equipos: " + e.getMessage());
        }
    }
    
    private void refreshPlayers () {
        try {
            
            
            btnAddPlayer.setEnabled(true);
            btnModPlayer.setEnabled(false);
            btnDelPlayer.setEnabled(false);
            
            //Limpiando campos de tabla
            playerId = 0;
            txtPlayerName.setText("");
            txtAge.setText("");
            txtHeight.setText("");
            txtWeight.setText("");
            cmbTeam.setSelectedIndex(0);
            //Obteniendo y limpiando modelo de tabla
            DefaultTableModel model = (DefaultTableModel) tblPlayer.getModel();
            while (model.getRowCount() > 0) model.removeRow(0);
            
            
            //Llenando modelos
            for (Player player : new PlayerController().getAll()) 
                model.addRow(new Object[]{player, player.getAge(), player.getHeight(), player.getWeight(), player.getTeam()});
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al llenar tabla de equipos: " + e.getMessage());
        }
    }
    
    private void btnAddTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTeamActionPerformed
        try {
            if ( new TeamController().save(txtTeamName.getText().trim(), txtTeamDesc.getText().trim())) {
                JOptionPane.showMessageDialog(this, "Equipo guardado");
                refreshTeams();
            }
            else {
                JOptionPane.showMessageDialog(this, "Error al guardar el equipo.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al procesar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddTeamActionPerformed

    private void tblTeamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTeamMouseClicked
        int row = tblTeam.getSelectedRow();
        if (row >= 0) {
            Team team = (Team) tblTeam.getValueAt(row, 0);
            teamId = team.getCode();
            txtTeamName.setText(team.getName());
            txtTeamDesc.setText(team.getDescription());
            btnAddTeam.setEnabled(false);
            btnModTeam.setEnabled(true);
            btnDelTeam.setEnabled(true);
        }
    }//GEN-LAST:event_tblTeamMouseClicked

    private void btnModTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModTeamActionPerformed
        try {
            if ( new TeamController().update(teamId, txtTeamName.getText().trim(), txtTeamDesc.getText().trim())) {
                JOptionPane.showMessageDialog(this, "Equipo modificado");
                refreshTeams();
            }
            else {
                JOptionPane.showMessageDialog(this, "Error al modificar el equipo.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al procesar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnModTeamActionPerformed

    private void btnClearTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTeamActionPerformed
        refreshTeams();
        btnAddTeam.setEnabled(true);
        btnModTeam.setEnabled(false);
        btnDelTeam.setEnabled(false);
    }//GEN-LAST:event_btnClearTeamActionPerformed

    private void btnDelTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelTeamActionPerformed
        try {
            
            int n = JOptionPane.showConfirmDialog(this, "¿Desea eliminar el equipo?", "Equipo", JOptionPane.YES_NO_OPTION);
            
            if (n == JOptionPane.YES_OPTION) {
            
                if ( new TeamController().delete(teamId)) {
                    JOptionPane.showMessageDialog(this, "Equipo eliminado");
                    refreshTeams();
                }
                else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar el equipo.");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al procesar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDelTeamActionPerformed
/*
    private void btnModTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTeam2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddTeam2ActionPerformed

    private void btnDelTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModTeam1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnModTeam1ActionPerformed

    private void btnClearTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModTeam2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnModTeam2ActionPerformed
*/
    private void btnDelPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelPlayerActionPerformed
        try {
            
            int n = JOptionPane.showConfirmDialog(this, "¿Desea eliminar el jugador?", "Jugador", JOptionPane.YES_NO_OPTION);
            
            if (n == JOptionPane.YES_OPTION) {
            
                if ( new PlayerController().delete(playerId)) {
                    JOptionPane.showMessageDialog(this, "Jugador eliminado");
                    refreshPlayers();
                }
                else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar el jugador.");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al procesar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDelPlayerActionPerformed

    private void btnClearPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearPlayerActionPerformed
        refreshPlayers();
    }//GEN-LAST:event_btnClearPlayerActionPerformed

    private void btnAddPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPlayerActionPerformed
        try {
            if ( new PlayerController().save(
                    (Team) cmbTeam.getSelectedItem(),
                    txtPlayerName.getText().trim(), 
                    Integer.parseInt(txtAge.getText().trim()),
                    Double.parseDouble(txtHeight.getText().trim()),
                    Double.parseDouble(txtWeight.getText().trim()))
                    ) 
            {
                JOptionPane.showMessageDialog(this, "Jugador guardado");
                refreshPlayers();
            }
            else {
                JOptionPane.showMessageDialog(this, "Error al guardar el Jugador.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al procesar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddPlayerActionPerformed

    private void tblPlayerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPlayerMouseClicked
        int row = tblPlayer.getSelectedRow();
        if (row >= 0) {
            Player player = (Player) tblPlayer.getValueAt(row, 0);
            playerId = player.getCode();
            txtPlayerName.setText(player.getName());
            txtAge.setText(String.valueOf(player.getAge()));
            txtHeight.setText(String.valueOf(player.getHeight()));
            txtWeight.setText(String.valueOf(player.getWeight()));
            
            cmbTeam.setEditable(true);
            cmbTeam.setSelectedItem(player.getTeam());
            cmbTeam.setEditable(false);
            
            btnAddPlayer.setEnabled(false);
            btnModPlayer.setEnabled(true);
            btnDelPlayer.setEnabled(true);
        }
    }//GEN-LAST:event_tblPlayerMouseClicked

    private void btnModPlayerActionPerformed(java.awt.event.ActionEvent evt) {                                               
        try {
            if ( new PlayerController().update(playerId, 
                                                (Team) cmbTeam.getSelectedItem(),
                                                txtPlayerName.getText().trim(), 
                                                Integer.parseInt(txtAge.getText().trim()),
                                                Double.parseDouble(txtHeight.getText().trim()),
                                                Double.parseDouble(txtWeight.getText().trim()))) 
            {
                JOptionPane.showMessageDialog(this, "Jugador modificado");
                refreshPlayers();
            }
            else {
                JOptionPane.showMessageDialog(this, "Error al modificar el jugador.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al procesar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPlayer;
    private javax.swing.JButton btnAddTeam;
    private javax.swing.JButton btnClearPlayer;
    private javax.swing.JButton btnClearTeam;
    private javax.swing.JButton btnDelPlayer;
    private javax.swing.JButton btnDelTeam;
    private javax.swing.JButton btnModPlayer;
    private javax.swing.JButton btnModTeam;
    private javax.swing.JComboBox<String> cmbTeam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblPlayer;
    private javax.swing.JTable tblTeam;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtPlayerName;
    private javax.swing.JTextArea txtTeamDesc;
    private javax.swing.JTextField txtTeamName;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
